name: CI

on:
  workflow_call:
    inputs:
      config-path:
        type: string
    secrets:
      JINA_AUTH_TOKEN:
        required: false
  pull_request:
    types: [opened, synchronize, reopened]
  

jobs:
  lint-ruff:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.10
      - name: Lint with ruff
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

          # stop the build if there are Python syntax errors or undefined names
          poetry run ruff alpaca-lora
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run ruff alpaca-lora

  check-black:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.10
      - name: check black
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --only dev
          poetry run black --check .

        env:
          CHANGED_FILES: ${{ steps.file_changes.outputs.added_modified }}
# run all tests
  setup-test:
    needs: [lint-ruff, check-black,]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8.10]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U poetry
          poetry install
          poetry run pip install torch --extra-index-url https://download.pytorch.org/whl/cpu

      - name: Test
        id: test
        run: |
          cd alpaca-lora
          poetry run pytest test_finetune.py
        timeout-minutes: 30
        env:
          JINA_AUTH_TOKEN: "${{ secrets.JINA_AUTH_TOKEN }}"


# just for blocking the merge until all parallel core-test are successful
  success-all-test:
    needs: [setup-test, check-black, lint-ruff]
    if: always()
    runs-on: ubuntu-20.04
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Check Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      - name: Success
        if: ${{ success() }}
        run: echo "All Done"
